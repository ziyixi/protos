// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.21.12
// source: proto/todofy/large_language_model.proto

package todofy

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	LLMSummaryService_Summarize_FullMethodName = "/todofy.LLMSummaryService/Summarize"
)

// LLMSummaryServiceClient is the client API for LLMSummaryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type LLMSummaryServiceClient interface {
	// Summarize the text using the specified model.
	Summarize(ctx context.Context, in *LLMSummaryRequest, opts ...grpc.CallOption) (*LLMSummaryResponse, error)
}

type lLMSummaryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLLMSummaryServiceClient(cc grpc.ClientConnInterface) LLMSummaryServiceClient {
	return &lLMSummaryServiceClient{cc}
}

func (c *lLMSummaryServiceClient) Summarize(ctx context.Context, in *LLMSummaryRequest, opts ...grpc.CallOption) (*LLMSummaryResponse, error) {
	out := new(LLMSummaryResponse)
	err := c.cc.Invoke(ctx, LLMSummaryService_Summarize_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LLMSummaryServiceServer is the server API for LLMSummaryService service.
// All implementations must embed UnimplementedLLMSummaryServiceServer
// for forward compatibility
type LLMSummaryServiceServer interface {
	// Summarize the text using the specified model.
	Summarize(context.Context, *LLMSummaryRequest) (*LLMSummaryResponse, error)
	mustEmbedUnimplementedLLMSummaryServiceServer()
}

// UnimplementedLLMSummaryServiceServer must be embedded to have forward compatible implementations.
type UnimplementedLLMSummaryServiceServer struct {
}

func (UnimplementedLLMSummaryServiceServer) Summarize(context.Context, *LLMSummaryRequest) (*LLMSummaryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Summarize not implemented")
}
func (UnimplementedLLMSummaryServiceServer) mustEmbedUnimplementedLLMSummaryServiceServer() {}

// UnsafeLLMSummaryServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to LLMSummaryServiceServer will
// result in compilation errors.
type UnsafeLLMSummaryServiceServer interface {
	mustEmbedUnimplementedLLMSummaryServiceServer()
}

func RegisterLLMSummaryServiceServer(s grpc.ServiceRegistrar, srv LLMSummaryServiceServer) {
	s.RegisterService(&LLMSummaryService_ServiceDesc, srv)
}

func _LLMSummaryService_Summarize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LLMSummaryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LLMSummaryServiceServer).Summarize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LLMSummaryService_Summarize_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LLMSummaryServiceServer).Summarize(ctx, req.(*LLMSummaryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// LLMSummaryService_ServiceDesc is the grpc.ServiceDesc for LLMSummaryService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var LLMSummaryService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "todofy.LLMSummaryService",
	HandlerType: (*LLMSummaryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Summarize",
			Handler:    _LLMSummaryService_Summarize_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/todofy/large_language_model.proto",
}
