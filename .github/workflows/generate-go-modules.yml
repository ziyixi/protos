name: Generate Go Modules from Proto Files

on:
  push:
    branches: main
    paths:
      - 'proto/**'
      - 'scripts/generate-go-proto.sh'
      - '.github/workflows/generate-go-modules.yml'
  pull_request:
    branches: main
    paths:
      - 'proto/**'
      - 'scripts/generate-go-proto.sh'
      - '.github/workflows/generate-go-modules.yml'
  workflow_dispatch:  # Allow manual triggering

jobs:
  generate-go-modules:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.0'
      
      - name: Install Protoc
        run: |
          sudo apt-get update && sudo apt-get install -y protobuf-compiler
          protoc --version
      
      - name: Install Go Protobuf Plugins
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2
          export PATH="$PATH:$(go env GOPATH)/bin"
      
      - name: Generate Go Modules
        run: |
          export MODULE_PREFIX="github.com/${{ github.repository }}"
          export PATH="$PATH:$(go env GOPATH)/bin"
          bash ./scripts/generate-go-proto.sh
      
      - name: Check for changes
        id: git-check
        run: |
          # First generate a status of what would be added with the force flag
          git add -f -n go/ > /dev/null
          # Check if there are any changes
          if git diff --cached --quiet; then
            echo "No changes detected in Go files"
            echo "CHANGES_EXIST=false" >> $GITHUB_ENV
          else
            echo "Changes detected in Go files"
            echo "CHANGES_EXIST=true" >> $GITHUB_ENV
            # Show summary of changes
            git diff --cached --stat
          fi
          # Reset the staged changes for now
          git reset
      
      - name: Commit and Push Changes
        if: env.CHANGES_EXIST == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -f go/   # Force add even if in .gitignore
          git commit -m "Auto-generate Go modules from Proto files"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}